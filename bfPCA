library(tidyverse)
library(fda)
library(ggtext)

# Import hip angle data with Frame as rows and Run as columns
# Import knee angle data with Frame as rows and Run as columns
# Transform data into a 3D array

hip_angle_matrix <- data.matrix(hip_angles)
knee_angle_matrix <- data.matrix(knee_angles)

Run <- as.list(colnames(hip_angles))
Frame <- as.list(1:100)
Joint <- c("hip","knee")

hip_knee_array <- array(c(hip_angle_matrix,knee_angle_matrix),dim=c(100,510,2),dimnames=list(Frame,Run,Joint))

(gaittime <- as.numeric(dimnames(hip_knee_array)[[1]])*1)

gaitrange <- c(0,100)

apply(hip_knee_array, 3, range)

# Set up the harmonic acceleration operator

harmaccelLfd <- vec2Lfd(c(0, (2*pi/100)^2, 0), rangeval=gaitrange)

# Set up basis for representing gait data

gaitbasis <- create.fourier.basis(gaitrange, nbasis=101)

# Choose level of smoothing using the generalized cross-validation criterion
# Set up range of smoothing parameters in log_10 units

gaitLoglam <- seq(-4,0,0.25)
nglam <- length(gaitLoglam)

gaitSmoothStats <- array(NA, dim=c(nglam, 3),
                         dimnames=list(gaitLoglam, c("log10.lambda", "df", "gcv") ) )
gaitSmoothStats[, 1] <- gaitLoglam

# Loop through smoothing parameters

for (ilam in 1:nglam) {
  gaitSmooth <- smooth.basisPar(gaittime, arrayvian2, gaitbasis,
                                Lfdobj=harmaccelLfd, lambda=10^gaitLoglam[ilam])
  gaitSmoothStats[ilam, "df"]  <- gaitSmooth$df
  gaitSmoothStats[ilam, "gcv"] <- sum(gaitSmooth$gcv)
}

#  Display and plot GCV criterion and degrees of freedom

gaitSmoothStats

plot(gaitLoglam, gaitSmoothStats[, "gcv"],
     type="b", xlab="Log_10 lambda", ylab="GCV Criterion",
     main="Gait Smoothing", log="y")
plot(gaitLoglam, gaitSmoothStats[, "df"], type="b",
     xlab="Log_10 lambda", ylab="Degrees of freedom",
     main="Gait Smoothing")

#GCV minimised with lambda = 10^(-1)

str(hip_knee_array)

gaitfd <- smooth.basisPar(gaittime, hip_knee_array,
                          gaitbasis, Lfdobj=harmaccelLfd, lambda=1e-1)$fd


str(gaitfd)

names(gaitfd$fdnames) <- c("Time", "Run", "Angle")

gaitfd$fdnames[[3]] <- c("Hip", "Knee")

# Do the PCA with varimax rotation
# Smooth with lambda as determined above

gaitfdPar <- fdPar(gaitbasis, harmaccelLfd, lambda=1e-1)

gaitpca.fd <- pca.fd(gaitfd, nharm=4, gaitfdPar)

gaitpca.fd <- varmx.pca.fd(gaitpca.fd)

# Plot harmonics using cycle plots

par(mfrow=c(1,1), mar=c(3,4,2,1), pty="s")

op <- par(mfrow=c(2,2))

plot.pca.fd(gaitpca.fd, expand = 100, cycle=TRUE)

par(op)

# Repeat for Knee and Ankle angle data
